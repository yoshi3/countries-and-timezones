{"version":3,"sources":["../src/index.js"],"names":["data","require","buildCountry","buildTimezone","totalCountries","Object","keys","countries","length","totalTimezones","timezones","memoizedCountries","memoizedTimezones","getAllCountries","forEach","getCountry","getAllTimezones","getTimezone","id","memoizeCountry","country","name","memoizeTimezone","timezone","getCountryForTimezone","tzName","getTimezonesForCountry","countryId","map","module","exports"],"mappings":"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","sourcesContent":["const data = require('./data.json');\nconst buildCountry = require('./build-country');\nconst buildTimezone = require('./build-timezone');\nconst totalCountries = Object.keys(data.countries).length;\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedCountries = 0;\nlet memoizedTimezones = 0;\n\nfunction getAllCountries() {\n  if (totalCountries !== memoizedCountries) Object.keys(data.countries).forEach(getCountry);\n  return { ...countries };\n}\n\nfunction getAllTimezones() {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return { ...timezones };\n}\n\nfunction getCountry(id) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return countries[id] ? { ...countries[id] } : null;\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n  memoizedCountries = Object.keys(countries).length;\n}\n\nfunction getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nfunction getCountryForTimezone(tzName) {\n  const timezone = getTimezone(tzName) || {};\n  const country = timezone.country;\n  return country ? getCountry(country) : null;\n}\n\nfunction getTimezonesForCountry(countryId) {\n  const country = getCountry(countryId);\n  if (!country) return null;\n  const {timezones = []} = country;\n  return timezones.map(getTimezone);\n}\n\nmodule.exports = {\n  getAllCountries,\n  getAllTimezones,\n  getCountry,\n  getTimezone,\n  getCountryForTimezone,\n  getTimezonesForCountry\n};\n"],"file":"index.js"}